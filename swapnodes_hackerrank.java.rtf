{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red255\green255\blue254;\red0\green0\blue0;
\red22\green107\blue41;\red144\green1\blue18;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c100000;\cssrgb\c100000\c100000\c99608;\cssrgb\c0\c0\c0;
\cssrgb\c7451\c48627\c21176;\cssrgb\c63922\c8235\c8235;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl460\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf4 \strokec4 \'a0java.io.*;\cb1 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4 \'a0java.math.*;\cb1 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4 \'a0java.text.*;\cb1 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4 \'a0java.util.*;\cb1 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4 \'a0java.util.regex.*;\cb1 \
\
\cf2 \cb3 \strokec2 import\cf4 \strokec4 \'a0java.util.*;\cb1 \
\
\cf2 \cb3 \strokec2 public\cf4 \strokec4 \'a0\cf2 \strokec2 class\cf4 \strokec4 \'a0Solution\{\cb1 \
\cb3 \'a0\'a0\'a0\'a0\cf2 \strokec2 static\cf4 \strokec4 \'a0Node\'a0root\'a0=\'a0\cf2 \strokec2 new\cf4 \strokec4 \'a0Node(\cf5 \strokec5 1\cf4 \strokec4 );\cb1 \
\
\cb3 \'a0\'a0\'a0\'a0\cf2 \strokec2 public\cf4 \strokec4 \'a0\cf2 \strokec2 static\cf4 \strokec4 \'a0\cf2 \strokec2 void\cf4 \strokec4 \'a0main(String\'a0...\'a0arg)\cb1 \
\cb3 \'a0\'a0\'a0\'a0\{\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0Scanner\'a0sc\'a0=\'a0\cf2 \strokec2 new\cf4 \strokec4 \'a0Scanner(System.in);\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 int\cf4 \strokec4 \'a0n,t,k;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0n\'a0=\'a0sc.nextInt();\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 int\cf4 \strokec4 [][]\'a0tree\'a0=\'a0\cf2 \strokec2 new\cf4 \strokec4 \'a0\cf2 \strokec2 int\cf4 \strokec4 [n][\cf5 \strokec5 2\cf4 \strokec4 ];\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 for\cf4 \strokec4 (\cf2 \strokec2 int\cf4 \strokec4 \'a0i=\cf5 \strokec5 0\cf4 \strokec4 ;i<n;i++)\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\{\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0tree[i][\cf5 \strokec5 0\cf4 \strokec4 ]\'a0=\'a0sc.nextInt();\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0tree[i][\cf5 \strokec5 1\cf4 \strokec4 ]\'a0=\'a0sc.nextInt();\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\'a0\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0root\'a0=\'a0ConstuctTree(tree);\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0t\'a0=\'a0sc.nextInt();\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 while\cf4 \strokec4 (t-->\cf5 \strokec5 0\cf4 \strokec4 )\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\{\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0k\'a0=\'a0sc.nextInt();\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0levelWise(root,k);\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0InOrderRec(root);\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0System.out.println();\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\cb1 \
\cb3 \'a0\'a0\'a0\'a0\}\cb1 \
\
\cb3 \'a0\'a0\'a0\'a0\cf2 \strokec2 public\cf4 \strokec4 \'a0\cf2 \strokec2 static\cf4 \strokec4 \'a0\cf2 \strokec2 void\cf4 \strokec4 \'a0levelWise(Node\'a0root,\cf2 \strokec2 int\cf4 \strokec4 \'a0k)\cb1 \
\cb3 \'a0\'a0\'a0\'a0\{\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0Stack<Node>\'a0currentlevel\'a0=\'a0\cf2 \strokec2 new\cf4 \strokec4 \'a0Stack<>();\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0Stack<Node>\'a0nextlevel\'a0=\'a0\cf2 \strokec2 new\cf4 \strokec4 \'a0Stack<>();\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 int\cf4 \strokec4 \'a0level=\cf5 \strokec5 1\cf4 \strokec4 ;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0Node\'a0temp;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0currentlevel.push(root);\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 while\cf4 \strokec4 (!currentlevel.empty())\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\{\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0temp\'a0=\'a0currentlevel.peek();\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0currentlevel.pop();\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 if\cf4 \strokec4 (temp.left!=null)\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0nextlevel.push(temp.left);\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 if\cf4 \strokec4 (temp.right!=null)\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0nextlevel.push(temp.right);\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 if\cf4 \strokec4 (level%k\'a0==\'a0\cf5 \strokec5 0\cf4 \strokec4 )\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\{\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0Node\'a0n\'a0=\'a0temp.left;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0temp.left\'a0=\'a0temp.right;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0temp.right\'a0=\'a0n;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 if\cf4 \strokec4 (currentlevel.empty())\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\{\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0Stack<Node>\'a0t\'a0=\'a0currentlevel;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0currentlevel\'a0=\'a0nextlevel;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0nextlevel\'a0=\'a0t;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0level++;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\cb1 \
\cb3 \'a0\'a0\'a0\'a0\}\cb1 \
\
\cb3 \'a0\'a0\'a0\'a0\cf2 \strokec2 public\cf4 \strokec4 \'a0\cf2 \strokec2 static\cf4 \strokec4 \'a0\cf2 \strokec2 void\cf4 \strokec4 \'a0InOrderRec(Node\'a0root)\cb1 \
\cb3 \'a0\'a0\'a0\'a0\{\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 if\cf4 \strokec4 (root\'a0==\'a0null)\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 return\cf4 \strokec4 ;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0InOrderRec(root.left);\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0sout(root.data);\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0InOrderRec(root.right);\cb1 \
\cb3 \'a0\'a0\'a0\'a0\}\cb1 \
\
\cb3 \'a0\'a0\'a0\'a0\cf2 \strokec2 public\cf4 \strokec4 \'a0\cf2 \strokec2 static\cf4 \strokec4 \'a0Node\'a0ConstuctTree(\cf2 \strokec2 int\cf4 \strokec4 [][]\'a0tree)\cb1 \
\cb3 \'a0\'a0\'a0\'a0\{\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0Node\'a0root\'a0=\'a0\cf2 \strokec2 new\cf4 \strokec4 \'a0Node(\cf5 \strokec5 1\cf4 \strokec4 );\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0Queue<Node>\'a0q\'a0=\'a0\cf2 \strokec2 new\cf4 \strokec4 \'a0LinkedList<>();\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0q.add(root);\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 for\cf4 \strokec4 (\cf2 \strokec2 int\cf4 \strokec4 \'a0i=\cf5 \strokec5 0\cf4 \strokec4 ;i<tree.length;i++)\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\{\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0Node\'a0left,right;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 if\cf4 \strokec4 (tree[i][\cf5 \strokec5 0\cf4 \strokec4 ]!=-\cf5 \strokec5 1\cf4 \strokec4 )\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0left\'a0=\'a0\cf2 \strokec2 new\cf4 \strokec4 \'a0Node(tree[i][\cf5 \strokec5 0\cf4 \strokec4 ]);\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 else\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0left\'a0=\'a0null;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 if\cf4 \strokec4 (tree[i][\cf5 \strokec5 1\cf4 \strokec4 ]!=-\cf5 \strokec5 1\cf4 \strokec4 )\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0right=\'a0\cf2 \strokec2 new\cf4 \strokec4 \'a0Node(tree[i][\cf5 \strokec5 1\cf4 \strokec4 ]);\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 else\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0right\'a0=\'a0null;\cb1 \
\
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0Node\'a0temp\'a0=\'a0q.remove();\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0temp.left\'a0=\'a0left;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0temp.right\'a0=\'a0right;\cb1 \
\
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 if\cf4 \strokec4 (left!=null)\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0q.add(left);\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 if\cf4 \strokec4 (right!=null)\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0q.add(right);\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 return\cf4 \strokec4 \'a0root;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\}\cb1 \
\
\
\cb3 \'a0\'a0\'a0\'a0\cf2 \strokec2 public\cf4 \strokec4 \'a0\cf2 \strokec2 static\cf4 \strokec4 \'a0\cf2 \strokec2 void\cf4 \strokec4 \'a0sout(\cf2 \strokec2 int\cf4 \strokec4 \'a0info)\cb1 \
\cb3 \'a0\'a0\'a0\'a0\{\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0System.out.printf(\cf6 \strokec6 "%d\'a0"\cf4 \strokec4 ,info);\cb1 \
\cb3 \'a0\'a0\'a0\'a0\}\cb1 \
\cb3 \}\cb1 \
\
\cf2 \cb3 \strokec2 class\cf4 \strokec4 \'a0Node\{\cb1 \
\cb3 \'a0\'a0\'a0\'a0\cf2 \strokec2 int\cf4 \strokec4 \'a0data;\cb1 \
\cb3 \'a0\'a0\'a0\'a0Node\'a0left,right;\cb1 \
\cb3 \'a0\'a0\'a0\'a0Node(\cf2 \strokec2 int\cf4 \strokec4 \'a0item)\cb1 \
\cb3 \'a0\'a0\'a0\'a0\{\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0data\'a0=\'a0item;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0left\'a0=\'a0null;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0right\'a0=\'a0null;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\}\cb1 \
\cb3 \}\cb1 \
}